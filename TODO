TODO:

Milestone 1 (Hello World):
Type node index.js, have it send a file over and run it (CHECK)

Milestone 2 (Tar and Feathers):
Type node run index.js FILE/FOLDER, have it bundle up the entire repo, compress it, send it over sftp, untar it on the other side and run it

Milestone 3 (Going Global):
Add the scaffolding necessary to run this module as command line tool and parse out arguments. hint: check omnomnom

Milestone 4 (Abstraction Traction):
Add flags for setting the ip address of the remote, path to the local ssh key, and passphrase for the key

Milestone 5 (Myfi WiFi):
Add the ability to set the WiFi credentials

Milestone 6 (BONUS ROUND):
Figure out how to set the mDNS settings such that Tessel is discoverable when it is on the same network as the client. Add the tessel list command to show the Tessel

==== Requires USB Access =====

Milestone 7 (We've got options):
Add the ability to display Tessels connected via USB as well as via WiFi. Add the ability to select which Tessel you act upon with an environment variable.

Milestone 8 (Fun Fun FRE):
Upon install of the module, generate an ssh key for a tessel user. When a Prime is plugged in via USB, transfer that ssh key to the Tessel under a 'tessel' account.

Milestone 9 (It was almost named Root):
Add a tessel root command which accepts a path to a local ssh file and sets it within the root user's .ssh account over USB. Create a /root/remote-script folder.

================================

Questions:
What if the repo does not have a package.json which specifies that starting point? Maybe that's what tessel init is supposed to do?


